[color]
	ui = true
	pager = false
[core]
	editor = vim
[credential]
	helper = cache --timeout=3600
[pull]
	ff = only
[push]
	default = simple
[merge]
	ff = only
	tool = vimdiff
[alias]
	co = checkout
	br = branch -a -vv
	st = status
	sti = status --ignored
	lp = log -p -n 5
	ln = log --name-only
	dn = diff --name-only
	df = diff
	dc = diff --cached
	tn = tag -n9
	alias = ! git config --get-regexp ^alias\\. | sed -e s/^alias\\.// -e s/\\ /\\ =\\ /
	recommit = "!f() { \
	  MSG_FILE=\"$(git rev-parse --git-dir)/COMMIT_EDITMSG\"; \
	  if [ ! -f \"$MSG_FILE\" ]; then \
	    echo \"No previous commit message found at $MSG_FILE\"; \
	    exit 1; \
	  fi; \
	  CLEAN_MSG=\"$(mktemp)\"; \
	  grep -v '^[#;]' \"$MSG_FILE\" | sed '/^[[:space:]]*$/d' > \"$CLEAN_MSG\"; \
	  git commit -a -F \"$CLEAN_MSG\"; \
	  rm -f \"$CLEAN_MSG\"; \
	}; f"
        forcepull = "!f() { \
            branch=$(git rev-parse --abbrev-ref HEAD); \
            read -p \"⚠️  This will discard ALL local changes and reset to origin/$branch. Continue? [y/N] \" ans; \
            if [ \"$ans\" = \"y\" ] || [ \"$ans\" = \"Y\" ]; then \
                git fetch origin && git reset --hard origin/$branch; \
            else \
                echo \"❌ Cancelled.\"; \
            fi; \
        }; f"

